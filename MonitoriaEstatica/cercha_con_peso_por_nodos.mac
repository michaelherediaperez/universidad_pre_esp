/* EJERCICIO DE CLASE.
   Solución de cerchas por el método de los nodos. 
   -----------------------------------------------------------------------------
   Hecho por : Michael Heredia Pérez.
   Fecha     : Junio / 2020.
   Correo    : mherediap@unal.edu.Correo
   Universidad Nacional de Colombia sede Manizales.                           
   -------------------------------------------------------------------------- */

kill(all)$              /* Se borra la memoria.                               */ 
ratprint  : false$      /* No muestra el mensaje "rat: replace".              */
keepfloat : true$       /* No racionalizar numeros en coma flotante.          */

/* Defino las dimensiones y propiedades de la sección. */
b   : 0.05$              /* m        Base.                     */
h   : 0.10$              /* m        Altura.                   */
rho : 600$               /* kg/m^3   Densidad.                 */
g   : 9.81$              /* m/s^2    gravedad                  */
LL  : [5, 3, 5, 4, 3]$   /* m        Longitud de los miembros. */
A   : b*h$               /* Área de la sección.                */

/* Calculo el peso propio de todas las barras. [kN] */
DD : A * LL * rho * g / 1000$  

/* DD es una lista que contiene el peso de todas las barras, las extraigo 
para operar con facilidad. Esto puede mhacerse más comprimido*/
D_AC : DD[1]$ 
D_AD : DD[2]$ 
D_CB : DD[3]$ 
D_CD : DD[4]$ 
D_DB : DD[5]$ 

/* Defino el peso que va en cada nodo. */
P_A : 0.5 * (D_AC + D_AD)$ 
P_B : 0.5 * (D_CB + D_DB)$
P_C : 0.5 * (D_AC + D_CD + D_CB)$
P_D : 0.5 * (D_AD + D_CD + D_DB)$

/* Defino ángulos [rad] y cargas [kN]. */
alpha : atan2(4,3)$
beta  : atan2(3,4)$

P  : 20$                /* Carga puntual en el nodo C  */
Px : P*cos(beta)$
Py : P*sin(beta)$

/* Defino las ecuaciones de equilirbio en el análisis externo. */
Sum_x : -Bx -Px = 0$ 
Sum_y : Ay + By - Py - P_A - P_B - P_C - P_D = 0$
Sum_M : -Ay*6 + P*5 + P_A*6 + (P_C + P_D)*3 = 0$

/* Resuelvo el análisis externo */
reacciones : solve([Sum_x, Sum_y, Sum_M], [Bx, By, Ay])$

/* Defino las ecuaciones de equilibrio en el análisis interno. */
nodo_Ax : F_AC*cos(alpha) + F_AD = 0$
nodo_Ay : Ay + F_AC*sin(alpha) - P_A = 0, reacciones$
nodo_Bx : - F_CB*cos(alpha) - F_DB - Bx = 0, reacciones$
nodo_By : F_CB*sin(alpha) + By - P_B = 0, reacciones$
nodo_Cx : - Px - F_AC*cos(alpha) + F_DB*cos(alpha) = 0$
nodo_Cy : - Py - F_CD - F_AC*sin(alpha) - F_DB*sin(alpha) - P_C = 0$
nodo_Dx : - F_AD + F_DB = 0$
nodo_Dy : F_CD - P_D = 0$

/* Resuelvo el análisis interno. */
fuerzas : solve([nodo_Ax, nodo_Ay, nodo_Bx, nodo_Dx, nodo_Dy],
                [F_AC, F_AD, F_CD, F_DB, F_CB])$

/* Imprimo las reacciones */
print("Las reacciones son [kN]")$
print("Bx = ")$ reacciones[1][1], numer;
print("By = ")$ reacciones[1][2], numer;
print("Ay = ")$ reacciones[1][3], numer;

/* Imprimo las fuerzas internas */
print("Las fuerzas internas son [kN]:")$
print("F_AC =")$ fuerzas[1][1], numer;
print("F_AD =")$ fuerzas[1][2], numer;
print("F_CD =")$ fuerzas[1][3], numer;
print("F_DB =")$ fuerzas[1][4], numer;
print("F_CB =")$ fuerzas[1][5], numer;